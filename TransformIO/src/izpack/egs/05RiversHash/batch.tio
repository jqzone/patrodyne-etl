<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Use JavaScript to read hash delimited source, write fixed-length target. -->
<batch xmlns="http://patrodyne.org/etl/TransformIO">
	<source charset="UTF-8" bufferSize="256">
		<locator url="file:egs/05RiversHash/rivers.hsv"/>
		<record exclude="\s*\n">
			<field name="Rank" get="(.*)#" set="$1"/>
			<field name="River" get="(.*)#" set="$1"/>
			<field name="Source" get="(.*)#" set="$1"/>
			<field name="Mouth" get="(.*)#" set="$1"/>
			<field name="Miles" get="(.*)#" set="$1"/>
			<field name="Kilometer" get="(.*)\n" set="$1"/>
		</record>
	</source>
	<target charset="UTF-8" byteOrderMark="true">
		<locator url="file:egs/05RiversHash/rivers.txt"/>
		<record>
			<field name="Rank" get="(.*)" set="$1"/>
			<field name="River" get="(.*)" set="$1"/>
			<field name="Source" get="(.*)" set="$1"/>
			<field name="Mouth" get="(.*)" set="$1"/>
			<field name="Miles" get="(.*)" set="$1"/>
			<field name="Kilometer" get="(.*)" set="$1\n"/>
		</record>
	</target>
	<transform>
		<script engine="JavaScript">
main();
function main()
{
	var recno = Number(common.get('recno')) + 1;
	common.put('recno', recno);
	if ( recno == 1 )
		target.clear();
	else
	{
		target.put('Rank',box(source.get('Rank'),4,"0","LEFT"));
		target.put('River',box(source.get('River'),30," ","RIGHT"));
		target.put('Source',box(source.get('Source'),70," ","RIGHT"));
		target.put('Mouth',box(source.get('Mouth'),20," ","RIGHT"));
		target.put('Miles',box(source.get('Miles'),5,"0","LEFT"));
		target.put('Kilometer',box(source.get('Kilometer'),5,"0","LEFT"));
	}
	return target;
}
function box(field,width,padding,mode)
{
	var box = "";
	if ( width > 0 )
	{
		box = field.substr(0, width);
		var padSize = width - box.length;
		if ( padSize > 0 )
		{
			var pad = (new Array(padSize+1)).join(padding);
			if ( "LEFT".equalsIgnoreCase(mode) )
				box = pad.concat(box);
			else
				box = box.concat(pad);
		}
	}
	return box;
}
		</script>
	</transform>
</batch>
<!-- vi:set tabstop=4 hardtabs=4 shiftwidth=4: -->
